version: '3.2'

services:
  filebeat:
    image: docker.elastic.co/beats/filebeat:${ELK_VERSION}
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - ./data:/usr/share/logData:ro #测试数据
      - filebeat:/usr/share/filebeat/data
    #networks:
    #  - elk
    environment: 
      kafka_hosts: ${FILEBEAT_KAFKA_HOSTS}
    depends_on: 
      - kafka
    restart: unless-stopped

  zookeeper:
    image: zookeeper
    ports:
      - "2181:2181"
    #networks:
    #  - elk
    volumes:
      - zookeeperdata:/data
      - zookeeperdatalog:/datalog
    restart: unless-stopped

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 0 # 手动修改/ 取消注释下一行
      #BROKER_ID_COMMAND: "hostname | awk -F'-' '{print $$2}'"
      KAFKA_ADVERTISED_HOST_NAME: ${KAFKA_HOST_NAME}
      KAFKA_CREATE_TOPICS: "filebeat:1:1,hadoop_log_input:1:1,hadoop_log_output:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_HEAP_OPTS: "-Xmx1G -Xms1G"
      KAFKA_LOG_DIRS: /kafka/kafka-logs
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kafka:/kafka
    #networks:
    #  - elk
    depends_on: 
      - zookeeper
    restart: unless-stopped

  logstash:
    image: docker.elastic.co/logstash/logstash:${ELK_VERSION}
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./output:/usr/share/logstash/output
      - logstash:/usr/share/logstash/data
    environment:
      LS_JAVA_OPTS: "-Xmx512m -Xms512m"
      kafka_hosts: ${LOGSTASH_KAFKA_HOSTS}
   # networks:
    #  - elk
    depends_on:
      #- elasticsearch
      - kafka
    restart: unless-stopped

  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELK_VERSION}
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx1g -Xms1g"
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
   # networks:
   #   - elk
    restart: unless-stopped


  kibana:
    image: docker.elastic.co/kibana/kibana:${ELK_VERSION}
    volumes:
      - ./kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml:ro
    ports:
      - "5601:5601"
   # networks:
   #   - elk
    depends_on: 
      - elasticsearch
    restart: unless-stopped

volumes:
  elasticsearch:
  filebeat:
  logstash:
  zookeeperdata:
  zookeeperdatalog:
  kafka:
#networks:
#  elk:
#   driver: bridge